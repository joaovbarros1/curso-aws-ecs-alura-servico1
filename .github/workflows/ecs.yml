# Nome da Action
name: Deploy to ECS

# Controles de quando a Action vai rodar:
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# O que vai acontecer:
  
jobs:
  # Vou ter uma tarefa: fazer o deploy para o ECS.
  deploy_to_ecs:
    # A tarefa vai rodar em um servidor linux ubuntu
    runs-on: ubuntu-latest
    # Vou ter os passos da minha tarefa:
    steps:
      # Checkout do nosso repositório (faz um clone e vou ter o código disponível). Se eu precisar saber em que diretório está, o GitHub salva na variável $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Configurando acesso à AWS:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # Essas variáveis foram configuradas em Settings -> Security -> Secrets and Variables -> Action -> Repository Secrets
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # A região que estou usando na AWS é a us-east-1
          aws-region: us-east-1

      # Fazendo o login no ECR:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Vamos fazer o build, tag e push da imagem para o ECR:
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: servico1
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # Vamos fazer o donwload da minha task definition e passar para um arquivo json:
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition servico1 --query taskDefinition > task-definition.json

      # Aqui, vai alterar a nossa task definition para utilizar a nova tag da imagem, ou seja, a task definition passa a utilizar a nova imagem.
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: servico1
          image: ${{ steps.build-image.outputs.image }}

      # Fazer o deploy no Amazon ECS da task definition
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: servico-servico1
          cluster: ec2
          wait-for-service-stability: true
